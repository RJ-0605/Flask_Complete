
logging in with smtp

need app password generated by app password by the help of switching the 2-step verification.


app password for python for gmail = kbdrukfcjqghmrum



###############################################################################

server=smtplib.SMTP_SSL(host,port)
server.login(user,app_password)
server.sendmail(user,to,message.as_string())
server.quit()
print('Sent email successfully')


###############################################################################
simple template to send gmail.


from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.header import Header
import smtplib
import os

user = 'your_username@gmail.com'
app_password = 'your_app_password'
host = 'smtp.gmail.com'
port = 465
to = 'your_recipent@gmail.com'

subject = 'test subject'
content_txt = 'mail body content'
attachment = 'test.png'

### Define email ###
message = MIMEMultipart()
# add From 
message['From'] = Header(user)
# add To
message['To'] = Header(to)     
# add Subject
message['Subject'] = Header(subject)
# add content text
message.attach(MIMEText(content_txt, 'plain', 'utf-8'))
# add attachment
att_name = os.path.basename(attachment)
att1 = MIMEText(open(attachment, 'rb').read(), 'base64', 'utf-8')
att1['Content-Type'] = 'application/octet-stream'
att1['Content-Disposition'] = 'attachment; filename=' + att_name
message.attach(att1)
    
### Send email ###
server = smtplib.SMTP_SSL(host, port) 
server.login(user, app_password)
server.sendmail(user, to, message.as_string()) 
server.quit() 
print('Sent email successfully')       